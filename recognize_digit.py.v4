import argparse
import tensorflow as tf
from PIL import Image

# Recognize a digit from a variable-sized input image
def recognize_digit(image_path, model):
    # Load and preprocess the input image
    input_image = Image.open(image_path)
    input_image = input_image.convert('L')  # Convert to grayscale
    input_size = (input_image.width, input_image.height)
    input_image = tf.keras.preprocessing.image.img_to_array(input_image)
    input_image = input_image / 255.0  # Normalize to [0, 1]
    input_image = tf.expand_dims(input_image, axis=0)  # Add batch dimension

    # Make predictions using the pre-trained model
    predictions = model.predict(input_image)

    # Get the recognized digit
    recognized_digit = tf.argmax(predictions, axis=1).numpy()[0]
    return recognized_digit, input_size

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Recognize a digit from a variable-sized input image.")
    parser.add_argument("--input_image", type=str, required=True, help="Path to the input image")
    args = parser.parse_args()

    # Load the pre-trained model
    model = tf.keras.models.load_model('trained_model.h5')

    # Perform digit recognition
    recognized_digit, input_size = recognize_digit(args.input_image, model)

    # Print the recognized digit and input image size
    print("Recognized digit:", recognized_digit)
    print("Input image size:", input_size)
