import argparse
import tensorflow as tf

def load_and_preprocess_image(image_path):
    # Function to load and preprocess the input image
    # You may need to customize this based on your requirements
    image = tf.io.read_file(image_path)
    image = tf.image.decode_image(image, channels=1)
    image = tf.image.resize(image, [28, 28])
    image = image / 255.0  # Normalize to [0, 1]
    image = tf.expand_dims(image, axis=0)  # Add batch dimension
    return image

def recognize_digit(image_path, model):
    # Load and preprocess the input image
    input_image = load_and_preprocess_image(image_path)

    # Make predictions using the pre-trained model
    predictions = model.predict(input_image)

    # Get the recognized digit
    recognized_digit = tf.argmax(predictions, axis=1).numpy()[0]
    return recognized_digit

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="Recognize a digit from an input image.")
    parser.add_argument("--input_image", type=str, required=True, help="Path to the input image")
    args = parser.parse_args()

    # Load the pre-trained model from the Docker image
    model = tf.keras.models.load_model("/app/trained_model")

    # Perform digit recognition
    recognized_digit = recognize_digit(args.input_image, model)

    # Print the recognized digit
    print("Recognized digit:", recognized_digit)
